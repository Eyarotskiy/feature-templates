{"version":3,"file":"utils.spec.js","sourceRoot":"","sources":["utils.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA,6CAAiC;AAEjC,QAAQ,CAAC,OAAO,EAAE;IACjB,QAAQ,CAAC,kBAAkB,EAAE;QAC5B,EAAE,CAAC,2BAA2B,EAAE;YAC/B,IAAM,UAAU,GAAe;gBAC9B;oBACC,GAAG,EAAE,GAAG;oBACR,SAAS,EAAE,KAAK;oBAChB,aAAa,EAAE,IAAI,IAAI,EAAE;oBACzB,KAAK,EAAE,YAAY;oBACnB,QAAQ,EAAE,eAAe;iBACzB;gBACD;oBACC,GAAG,EAAE,GAAG;oBACR,SAAS,EAAE,KAAK;oBAChB,aAAa,EAAE,IAAI,IAAI,EAAE;oBACzB,KAAK,EAAE,cAAc;oBACrB,QAAQ,EAAE,iBAAiB;iBAC3B;aACD,CAAC;YAEF,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2CAA2C,EAAE;YAC/C,IAAM,UAAU,GAAe;gBAC9B;oBACC,GAAG,EAAE,GAAG;oBACR,SAAS,EAAE,IAAI;oBACf,aAAa,EAAE,IAAI,IAAI,EAAE;oBACzB,KAAK,EAAE,YAAY;oBACnB,QAAQ,EAAE,eAAe;iBACzB;gBACD;oBACC,GAAG,EAAE,GAAG;oBACR,SAAS,EAAE,KAAK;oBAChB,aAAa,EAAE,IAAI,IAAI,EAAE;oBACzB,KAAK,EAAE,cAAc;oBACrB,QAAQ,EAAE,iBAAiB;iBAC3B;aACD,CAAC;YAEF,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,YAAY,EAAE;QACtB,EAAE,CAAC,8BAA8B,EAAE;YAClC,IAAM,WAAW,GAAG,IAAI,IAAI,CAAC,0BAA0B,CAAC,CAAC;YACzD,IAAI,CAAC,aAAa,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;YAE1D,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAEpD,IAAM,WAAW,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;YAC3C,IAAI,CAAC,aAAa,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;YAE1D,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACJ,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import {UserData} from './types';\r\nimport * as utils from './utils';\r\n\r\ndescribe('utils', () => {\r\n\tdescribe('extractUserNames', () => {\r\n\t\tit('should return empty array', () => {\r\n\t\t\tconst TEST_USERS: UserData[] = [\r\n\t\t\t\t{\r\n\t\t\t\t\t_id: '1',\r\n\t\t\t\t\tconfirmed: false,\r\n\t\t\t\t\tcreation_date: new Date(),\r\n\t\t\t\t\tlogin: 'test login',\r\n\t\t\t\t\tpassword: 'test password',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t_id: '2',\r\n\t\t\t\t\tconfirmed: false,\r\n\t\t\t\t\tcreation_date: new Date(),\r\n\t\t\t\t\tlogin: 'test login 2',\r\n\t\t\t\t\tpassword: 'test password 2',\r\n\t\t\t\t},\r\n\t\t\t];\r\n\r\n\t\t\texpect(utils.extractUserNames(TEST_USERS)).toEqual([]);\r\n\t\t});\r\n\r\n\t\tit('should return an array of confirmed users', () => {\r\n\t\t\tconst TEST_USERS: UserData[] = [\r\n\t\t\t\t{\r\n\t\t\t\t\t_id: '1',\r\n\t\t\t\t\tconfirmed: true,\r\n\t\t\t\t\tcreation_date: new Date(),\r\n\t\t\t\t\tlogin: 'test login',\r\n\t\t\t\t\tpassword: 'test password',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t_id: '2',\r\n\t\t\t\t\tconfirmed: false,\r\n\t\t\t\t\tcreation_date: new Date(),\r\n\t\t\t\t\tlogin: 'test login 2',\r\n\t\t\t\t\tpassword: 'test password 2',\r\n\t\t\t\t},\r\n\t\t\t];\r\n\r\n\t\t\texpect(utils.extractUserNames(TEST_USERS)).toEqual(['test login']);\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('formatDate', () => {\r\n\t\tit('should return formatted date', () => {\r\n\t\t\tconst TEST_DATE_1 = new Date('2022-01-30T12:56:35.659Z');\r\n\t\t\tjest.useFakeTimers().setSystemTime(TEST_DATE_1.getTime());\r\n\r\n\t\t\texpect(utils.formatDate()).toBe('30-01-2022 13:56');\r\n\r\n\t\t\tconst TEST_DATE_2 = new Date('2022-01-30');\r\n\t\t\tjest.useFakeTimers().setSystemTime(TEST_DATE_2.getTime());\r\n\r\n\t\t\texpect(utils.formatDate()).toBe('30-01-2022 01:00');\r\n\t\t});\r\n\t});\r\n});\r\n"]}