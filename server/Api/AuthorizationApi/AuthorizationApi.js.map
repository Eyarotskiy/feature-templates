{"version":3,"file":"AuthorizationApi.js","sourceRoot":"","sources":["AuthorizationApi.ts"],"names":[],"mappings":"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","sourcesContent":["import {Request, Response} from 'express';\r\nimport Database from '../../database/Database';\r\nimport {UserSignInResponse, UserSignUpResponse} from '../../common/types';\r\nimport {JWT_SECRET} from '../../common/constants';\r\nimport Api from '../Api';\r\nimport Email from '../../Email/Email';\r\nimport {extractUserNames} from '../../common/utils';\r\nconst bcrypt = require('bcrypt');\r\nconst jwt = require('jsonwebtoken');\r\n\r\nclass AuthorizationApi {\r\n\tasync handleSignInRequest(req: Request, res: Response): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst {login, password} = req.body;\r\n\r\n\t\t\t// Exception for testing purposes.\r\n\t\t\tif (login === 'test@test.com') {\r\n\t\t\t\tconst token = await Api.generateToken(login);\r\n\t\t\t\tApi.sendSuccess(res, {token});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst user = await Database.findUser(login);\r\n\t\t\tconst isPasswordCorrect =\r\n\t\t\t\tuser ? await bcrypt.compare(password, user.password) : false;\r\n\t\t\tconst token =\r\n\t\t\t\tuser && isPasswordCorrect ?  await Api.generateToken(login) : null;\r\n\t\t\tconst isEmailConfirmed = user && user.confirmed;\r\n\r\n\t\t\tif (!user) {\r\n\t\t\t\tApi.sendError(res, 404, {message: 'Such user does not exist'});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!isPasswordCorrect) {\r\n\t\t\t\tApi.sendError(res, 401, {message: 'Password is not correct'});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (!isEmailConfirmed) {\r\n\t\t\t\tApi.sendError(res, 403, {message: 'Email is not confirmed'});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst response: UserSignInResponse = {token};\r\n\t\t\tApi.sendSuccess(res, response);\r\n\t\t} catch (error) {\r\n\t\t\tApi.sendError(res, 500, error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync handleAuthenticateRequest(req: Request, res: Response): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst token = req.headers['auth-token'];\r\n\t\t\tconst verification = await jwt.verify(token, JWT_SECRET);\r\n\t\t\tconst user = await Database.findUser(verification.name);\r\n\t\t\tconst newToken = await Api.generateToken(verification.name);\r\n\t\t\tawait Database.confirmUser(user.login);\r\n\r\n\t\t\tconst response = {\r\n\t\t\t\tlogin: user.login,\r\n\t\t\t\tnewToken: newToken,\r\n\t\t\t};\r\n\t\t\tApi.sendSuccess(res, response);\r\n\t\t} catch (error) {\r\n\t\t\tApi.sendError(res, 500, error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync handleSignUpRequest(req: Request, res: Response): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst {login, password} = req.body;\r\n\t\t\tconst saltRounds = 10;\r\n\t\t\tconst hash = await bcrypt.hash(password, saltRounds);\r\n\t\t\tconst user = await Database.findUser(login);\r\n\r\n\t\t\tif (user) {\r\n\t\t\t\tApi.sendError(res, 403, {message: 'User already exists'});\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tawait Email.sendConfirmationEmail(login);\r\n\t\t\tawait Database.saveUser(login, hash);\r\n\r\n\t\t\tconst response: UserSignUpResponse = {\r\n\t\t\t\tusers: extractUserNames(await Database.getUsers()),\r\n\t\t\t};\r\n\r\n\t\t\tApi.sendSuccess(res, response);\r\n\t\t} catch (error) {\r\n\t\t\tApi.sendError(res, 500, error);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default new AuthorizationApi();\r\n"]}