{"version":3,"file":"WebSocket.spec.js","sourceRoot":"","sources":["WebSocket.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import WebSocket from './WebSocket';\r\nimport {\r\n\tTEST_DISH_NAME, TEST_DISH_UPDATE_PAYLOAD,\r\n\tTEST_ERROR,\r\n\tTEST_ERROR_STACKTRACE,\r\n\tTEST_MENU, TEST_NEW_DISH_NAME\r\n} from '../common/specConstants';\r\nimport Database from '../database/Database';\r\n\r\ndescribe('WebSocket', () => {\r\n\tlet webSocket: WebSocket;\r\n\tconst MOCK_IO = {\r\n\t\ton: jest.fn(),\r\n\t\tsockets: {emit: jest.fn()},\r\n\t} as any;\r\n\tconst MOCK_WEBSOCKET_CLIENT = {\r\n\t\ton: jest.fn(),\r\n\t\temit: jest.fn(),\r\n\t} as any;\r\n\r\n\tbeforeEach(() => {\r\n\t\tDatabase.getMenu = jest.fn().mockReturnValue(TEST_MENU);\r\n\t\tDatabase.clearMenu = jest.fn();\r\n\t\tDatabase.saveDish = jest.fn();\r\n\t\tDatabase.updateDish = jest.fn();\r\n\t\tDatabase.deleteDish = jest.fn();\r\n\t\twebSocket = new WebSocket(MOCK_IO);\r\n\t\twebSocket.client = MOCK_WEBSOCKET_CLIENT;\r\n\t});\r\n\r\n\tdescribe('initSocket', () => {\r\n\t\tit('should init IO socket connection', () => {\r\n\t\t\twebSocket.initSocket();\r\n\r\n\t\t\texpect(webSocket.io.on).toHaveBeenCalled();\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('initMenuRequests', () => {\r\n\t\tit('should init dish and menu event handlers', async () => {\r\n\t\t\tawait webSocket.initMenuRequests();\r\n\r\n\t\t\texpect(webSocket.client.on).toHaveBeenCalled();\r\n\t\t\texpect(webSocket.client.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('getMenu', TEST_MENU);\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('emitError', () => {\r\n\t\tit('should emit error event', () => {\r\n\t\t\twebSocket.emitError(TEST_ERROR_STACKTRACE);\r\n\r\n\t\t\texpect(webSocket.client.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('menuError', TEST_ERROR_STACKTRACE);\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('emitMenu', () => {\r\n\t\tit('should emit menu event', async () => {\r\n\t\t\tawait webSocket.emitMenu();\r\n\r\n\t\t\texpect(webSocket.client.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('getMenu', TEST_MENU);\r\n\t\t});\r\n\r\n\t\tit('should emit error', async () => {\r\n\t\t\tDatabase.getMenu = jest.fn().mockImplementation(() => {\r\n\t\t\t\tthrow TEST_ERROR;\r\n\t\t\t});\r\n\r\n\t\t\tawait webSocket.emitMenu();\r\n\r\n\t\t\texpect(webSocket.client.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('menuError', 'Emit menu error');\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('emitMenuToAll', () => {\r\n\t\tit('should emit menu event to all clients', async () => {\r\n\t\t\tawait webSocket.emitMenuToAll();\r\n\r\n\t\t\texpect(webSocket.io.sockets.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('getMenu', TEST_MENU);\r\n\t\t});\r\n\r\n\t\tit('should emit error', async () => {\r\n\t\t\tDatabase.getMenu = jest.fn().mockImplementation(() => {\r\n\t\t\t\tthrow TEST_ERROR;\r\n\t\t\t});\r\n\r\n\t\t\tawait webSocket.emitMenuToAll();\r\n\r\n\t\t\texpect(webSocket.client.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('menuError', 'Emit menu to all error');\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('clearMenu', () => {\r\n\t\tit('should emit menu clear event', async () => {\r\n\t\t\tawait webSocket.clearMenu();\r\n\r\n\t\t\texpect(Database.clearMenu).toHaveBeenCalled();\r\n\t\t\texpect(webSocket.io.sockets.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('getMenu', TEST_MENU);\r\n\t\t});\r\n\r\n\t\tit('should emit error', async () => {\r\n\t\t\tDatabase.clearMenu = jest.fn().mockImplementation(() => {\r\n\t\t\t\tthrow TEST_ERROR;\r\n\t\t\t});\r\n\r\n\t\t\tawait webSocket.clearMenu();\r\n\r\n\t\t\texpect(webSocket.client.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('menuError', 'Menu clear error');\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('saveDish', () => {\r\n\t\tit('should emit dish save event', async () => {\r\n\t\t\tawait webSocket.saveDish(TEST_DISH_NAME);\r\n\r\n\t\t\texpect(Database.saveDish).toHaveBeenCalledWith(TEST_DISH_NAME);\r\n\t\t\texpect(webSocket.io.sockets.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('getMenu', TEST_MENU);\r\n\t\t});\r\n\r\n\t\tit('should emit error', async () => {\r\n\t\t\tDatabase.saveDish = jest.fn().mockImplementation(() => {\r\n\t\t\t\tthrow TEST_ERROR;\r\n\t\t\t});\r\n\r\n\t\t\tawait webSocket.saveDish(TEST_DISH_NAME);\r\n\r\n\t\t\texpect(webSocket.client.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('menuError', 'Dish save error');\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('updateDish', () => {\r\n\t\tit('should emit dish update event', async () => {\r\n\t\t\tawait webSocket.updateDish(TEST_DISH_UPDATE_PAYLOAD);\r\n\r\n\t\t\texpect(Database.updateDish)\r\n\t\t\t\t.toHaveBeenCalledWith(TEST_DISH_NAME, TEST_NEW_DISH_NAME);\r\n\t\t\texpect(webSocket.io.sockets.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('getMenu', TEST_MENU);\r\n\t\t});\r\n\r\n\t\tit('should emit error', async () => {\r\n\t\t\tDatabase.updateDish = jest.fn().mockImplementation(() => {\r\n\t\t\t\tthrow TEST_ERROR;\r\n\t\t\t});\r\n\r\n\t\t\tawait webSocket.updateDish(TEST_DISH_UPDATE_PAYLOAD);\r\n\r\n\t\t\texpect(webSocket.client.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('menuError', 'Dish update error');\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('deleteDish', () => {\r\n\t\tit('should emit dish update event', async () => {\r\n\t\t\tawait webSocket.deleteDish(TEST_DISH_NAME);\r\n\r\n\t\t\texpect(Database.deleteDish).toHaveBeenCalledWith(TEST_DISH_NAME);\r\n\t\t\texpect(webSocket.io.sockets.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('getMenu', TEST_MENU);\r\n\t\t});\r\n\r\n\t\tit('should emit error', async () => {\r\n\t\t\tDatabase.deleteDish = jest.fn().mockImplementation(() => {\r\n\t\t\t\tthrow TEST_ERROR;\r\n\t\t\t});\r\n\r\n\t\t\tawait webSocket.deleteDish(TEST_DISH_NAME);\r\n\r\n\t\t\texpect(webSocket.client.emit)\r\n\t\t\t\t.toHaveBeenCalledWith('menuError', 'Dish delete error');\r\n\t\t});\r\n\t});\r\n});\r\n"]}