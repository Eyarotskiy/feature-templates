{"version":3,"file":"MenuApi.js","sourceRoot":"","sources":["MenuApi.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,qEAA+C;AAC/C,+CAAyB;AAEzB;IAAA;IAgDA,CAAC;IA/CM,uCAAqB,GAA3B,UAA4B,GAAY,EAAE,GAAY;;;;;;;wBAE7C,QAAQ,GAAI,GAAG,CAAC,IAAI,SAAZ,CAAa;wBACV,qBAAM,kBAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAA;;wBAA7C,SAAS,GAAG,SAAiC;wBACnD,aAAG,CAAC,WAAW,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;;;;wBAEhC,aAAG,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,OAAK,CAAC,CAAA;;;;;;KAE/B;IAEK,yCAAuB,GAA7B,UAA8B,GAAY,EAAE,GAAY;;;;;;;wBAEhD,KAA6B,GAAG,CAAC,IAAI,EAApC,WAAW,iBAAA,EAAE,WAAW,iBAAA,CAAa;wBACxB,qBAAM,kBAAQ,CAAC,UAAU,CAAC,WAAW,EAAE,WAAW,CAAC,EAAA;;wBAAjE,WAAW,GAAG,SAAmD;wBACvE,aAAG,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;;;;wBAElC,aAAG,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,OAAK,CAAC,CAAC;;;;;;KAEhC;IAEK,yCAAuB,GAA7B,UAA8B,GAAY,EAAE,GAAY;;;;;;;wBAE/C,QAAQ,GAAI,GAAG,CAAC,IAAI,SAAZ,CAAa;wBACR,qBAAM,kBAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAA;;wBAAjD,WAAW,GAAG,SAAmC;wBACvD,aAAG,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;;;;wBAElC,aAAG,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,OAAK,CAAC,CAAC;;;;;;KAEhC;IAEK,wCAAsB,GAA5B,UAA6B,GAAY,EAAE,GAAY;;;;;;;wBAEtC,qBAAM,kBAAQ,CAAC,SAAS,EAAE,EAAA;;wBAAnC,MAAM,GAAG,SAA0B;wBACzC,aAAG,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;;;wBAE7B,aAAG,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,OAAK,CAAC,CAAC;;;;;;KAEhC;IAEK,sCAAoB,GAA1B,UAA2B,GAAY,EAAE,GAAY;;;;;;;wBAEtC,qBAAM,kBAAQ,CAAC,OAAO,EAAE,EAAA;;wBAA/B,IAAI,GAAG,SAAwB;wBACrC,aAAG,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;;;;wBAE3B,aAAG,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,OAAK,CAAC,CAAC;;;;;;KAEhC;IACF,cAAC;AAAD,CAAC,AAhDD,IAgDC;AAED,kBAAe,IAAI,OAAO,EAAE,CAAC","sourcesContent":["import {Request, Response} from 'express';\r\nimport Database from '../../database/Database';\r\nimport Api from '../Api';\r\n\r\nclass MenuApi {\r\n\tasync handleDishSaveRequest(req: Request, res:Response): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst {dishName} = req.body;\r\n\t\t\tconst savedDish = await Database.saveDish(dishName);\r\n\t\t\tApi.sendSuccess(res, savedDish);\r\n\t\t} catch (error) {\r\n\t\t\tApi.sendError(res, 400, error)\r\n\t\t}\r\n\t}\r\n\r\n\tasync handleDishUpdateRequest(req: Request, res:Response): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst {oldDishName, newDishName} = req.body;\r\n\t\t\tconst updatedDish = await Database.updateDish(oldDishName, newDishName);\r\n\t\t\tApi.sendSuccess(res, updatedDish);\r\n\t\t} catch (error) {\r\n\t\t\tApi.sendError(res, 400, error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync handleDishDeleteRequest(req: Request, res:Response): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst {dishName} = req.body;\r\n\t\t\tconst deletedDish = await Database.deleteDish(dishName);\r\n\t\t\tApi.sendSuccess(res, deletedDish);\r\n\t\t} catch (error) {\r\n\t\t\tApi.sendError(res, 400, error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync handleMenuClearRequest(req: Request, res:Response): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst result = await Database.clearMenu();\r\n\t\t\tApi.sendSuccess(res, result);\r\n\t\t} catch (error) {\r\n\t\t\tApi.sendError(res, 400, error);\r\n\t\t}\r\n\t}\r\n\r\n\tasync handleMenuGetRequest(req: Request, res:Response): Promise<void> {\r\n\t\ttry {\r\n\t\t\tconst menu = await Database.getMenu();\r\n\t\t\tApi.sendSuccess(res, menu);\r\n\t\t} catch (error) {\r\n\t\t\tApi.sendError(res, 400, error);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default new MenuApi();\r\n"]}