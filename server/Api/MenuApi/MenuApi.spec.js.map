{"version":3,"file":"MenuApi.spec.js","sourceRoot":"","sources":["MenuApi.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import Api from '../Api';\r\nimport Database from '../../database/Database';\r\nimport {TEST_DISH, TEST_ERROR, TEST_MENU, TEST_REQUEST, TEST_RESPONSE} from '../../common/specConstants';\r\nimport MenuApi from './MenuApi';\r\n\r\ndescribe('MenuApi', () => {\r\n\tbeforeEach(() => {\r\n\t\tApi.sendSuccess= jest.fn();\r\n\t\tApi.sendError = jest.fn();\r\n\t\tDatabase.saveDish = jest.fn().mockReturnValue(TEST_DISH);\r\n\t\tDatabase.updateDish = jest.fn().mockReturnValue(TEST_DISH);\r\n\t\tDatabase.deleteDish = jest.fn().mockReturnValue(TEST_DISH);\r\n\t\tDatabase.getMenu = jest.fn().mockReturnValue(TEST_MENU);\r\n\t\tDatabase.clearMenu = jest.fn().mockReturnValue(TEST_MENU);\r\n\t});\r\n\r\n\tdescribe('handleDishSaveRequest', () => {\r\n\t\tit('should send successful response', async () => {\r\n\t\t\tawait MenuApi.handleDishSaveRequest(TEST_REQUEST, TEST_RESPONSE);\r\n\r\n\t\t\texpect(Api.sendSuccess).toHaveBeenCalledWith(TEST_RESPONSE, TEST_DISH);\r\n\t\t});\r\n\r\n\t\tit('should send error for failed request', async () => {\r\n\t\t\tDatabase.saveDish = jest.fn().mockImplementation(() => {\r\n\t\t\t\tthrow TEST_ERROR;\r\n\t\t\t});\r\n\r\n\t\t\tawait MenuApi.handleDishSaveRequest(TEST_REQUEST, TEST_RESPONSE);\r\n\r\n\t\t\texpect(Api.sendError)\r\n\t\t\t\t.toHaveBeenCalledWith(TEST_RESPONSE, 400, TEST_ERROR);\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('handleDishUpdateRequest', () => {\r\n\t\tit('should send successful response', async () => {\r\n\t\t\tawait MenuApi.handleDishUpdateRequest(TEST_REQUEST, TEST_RESPONSE);\r\n\r\n\t\t\texpect(Api.sendSuccess).toHaveBeenCalledWith(TEST_RESPONSE, TEST_DISH);\r\n\t\t});\r\n\r\n\t\tit('should send error for failed request', async () => {\r\n\t\t\tDatabase.updateDish = jest.fn().mockImplementation(() => {\r\n\t\t\t\tthrow TEST_ERROR;\r\n\t\t\t});\r\n\r\n\t\t\tawait MenuApi.handleDishUpdateRequest(TEST_REQUEST, TEST_RESPONSE);\r\n\r\n\t\t\texpect(Api.sendError)\r\n\t\t\t\t.toHaveBeenCalledWith(TEST_RESPONSE, 400, TEST_ERROR);\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('handleDishDeleteRequest', () => {\r\n\t\tit('should send successful response', async () => {\r\n\t\t\tawait MenuApi.handleDishDeleteRequest(TEST_REQUEST, TEST_RESPONSE);\r\n\r\n\t\t\texpect(Api.sendSuccess).toHaveBeenCalledWith(TEST_RESPONSE, TEST_DISH);\r\n\t\t});\r\n\r\n\t\tit('should send error for failed request', async () => {\r\n\t\t\tDatabase.deleteDish = jest.fn().mockImplementation(() => {\r\n\t\t\t\tthrow TEST_ERROR;\r\n\t\t\t});\r\n\r\n\t\t\tawait MenuApi.handleDishDeleteRequest(TEST_REQUEST, TEST_RESPONSE);\r\n\r\n\t\t\texpect(Api.sendError)\r\n\t\t\t\t.toHaveBeenCalledWith(TEST_RESPONSE, 400, TEST_ERROR);\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('handleMenuClearRequest', () => {\r\n\t\tit('should send successful response', async () => {\r\n\t\t\tawait MenuApi.handleMenuClearRequest(TEST_REQUEST, TEST_RESPONSE);\r\n\r\n\t\t\texpect(Api.sendSuccess).toHaveBeenCalledWith(TEST_RESPONSE, TEST_MENU);\r\n\t\t});\r\n\r\n\t\tit('should send error for failed request', async () => {\r\n\t\t\tDatabase.clearMenu = jest.fn().mockImplementation(() => {\r\n\t\t\t\tthrow TEST_ERROR;\r\n\t\t\t});\r\n\r\n\t\t\tawait MenuApi.handleMenuClearRequest(TEST_REQUEST, TEST_RESPONSE);\r\n\r\n\t\t\texpect(Api.sendError)\r\n\t\t\t\t.toHaveBeenCalledWith(TEST_RESPONSE, 400, TEST_ERROR);\r\n\t\t});\r\n\t});\r\n\r\n\tdescribe('handleMenuGetRequest', () => {\r\n\t\tit('should send successful response', async () => {\r\n\t\t\tawait MenuApi.handleMenuGetRequest(TEST_REQUEST, TEST_RESPONSE);\r\n\r\n\t\t\texpect(Api.sendSuccess).toHaveBeenCalledWith(TEST_RESPONSE, TEST_MENU);\r\n\t\t});\r\n\r\n\t\tit('should send error for failed request', async () => {\r\n\t\t\tDatabase.getMenu = jest.fn().mockImplementation(() => {\r\n\t\t\t\tthrow TEST_ERROR;\r\n\t\t\t});\r\n\r\n\t\t\tawait MenuApi.handleMenuGetRequest(TEST_REQUEST, TEST_RESPONSE);\r\n\r\n\t\t\texpect(Api.sendError)\r\n\t\t\t\t.toHaveBeenCalledWith(TEST_RESPONSE, 400, TEST_ERROR);\r\n\t\t});\r\n\t});\r\n});\r\n"]}